namespace BotForge.Messaging;

/// <summary>
/// Represents an incoming interaction generated by a user (for example, a command, callback query, or reaction).
/// </summary>
public interface IInteraction
{
    /// <summary>
    /// The identity of the user who initiated the interaction.
    /// </summary>
    UserIdentity From { get; }

    /// <summary>
    /// The kind of interaction.
    /// </summary>
    InteractionType Type { get; }

    /// <summary>
    /// The command name when <see cref="Type"/> is <see cref="InteractionType.Command"/>; otherwise <see langword="null"/>.
    /// </summary>
    string? CommandName { get; }

    /// <summary>
    /// Optional named options or arguments associated with the interaction (for example command parameters).
    /// </summary>
    IReadOnlyDictionary<string, string>? Options { get; }

    /// <summary>
    /// Free-form query text or payload associated with the interaction (for example callback data).
    /// </summary>
    string? Query { get; }

    /// <summary>
    /// The underlying transport-specific raw object representing the interaction.
    /// </summary>
    object? Raw { get; }
}

/// <summary>
/// Enumerates supported interaction kinds.
/// </summary>
public enum InteractionType
{
    /// <summary>
    /// A named command invocation (for example "/start" or a slash command).
    /// </summary>
    Command,

    /// <summary>
    /// A callback query or button press.
    /// </summary>
    CallbackQuery,

    /// <summary>
    /// A reaction (for example, emoji reaction).
    /// </summary>
    Reaction,
}
